<?xml version="1.0"?>
<analyzerinfo checksum="2555440713">
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;last&lt;first&apos; is always false" verbose="Condition &apos;last&lt;first&apos; is always false" cwe="570" file0="C:/Users/EliR/OneDrive/Documents/PlatformIO/Projects/canbus/.pio/libdeps/megaatmega2560/Adafruit_GFX_Library/fontconvert/fontconvert.c">
            <location file="C:\Users\EliR\OneDrive\Documents\PlatformIO\Projects\canbus\.pio\libdeps\megaatmega2560\Adafruit_GFX_Library\fontconvert\fontconvert.c" line="85" column="12" info="Condition &apos;last&lt;first&apos; is always false"/>
            <location file="C:\Users\EliR\OneDrive\Documents\PlatformIO\Projects\canbus\.pio\libdeps\megaatmega2560\Adafruit_GFX_Library\fontconvert\fontconvert.c" line="71" column="12" info="Assuming condition is false"/>
            <location file="C:\Users\EliR\OneDrive\Documents\PlatformIO\Projects\canbus\.pio\libdeps\megaatmega2560\Adafruit_GFX_Library\fontconvert\fontconvert.c" line="54" column="44" info="Assignment &apos;last=&apos;~&apos;&apos;, assigned value is 126"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;row&apos; can be reduced." verbose="The scope of the variable &apos;row&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="C:/Users/EliR/OneDrive/Documents/PlatformIO/Projects/canbus/.pio/libdeps/megaatmega2560/Adafruit_GFX_Library/fontconvert/fontconvert.c">
            <location file="C:\Users\EliR\OneDrive\Documents\PlatformIO\Projects\canbus\.pio\libdeps\megaatmega2560\Adafruit_GFX_Library\fontconvert\fontconvert.c" line="34" column="18"/>
            <symbol>row</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;firstCall&apos; can be reduced." verbose="The scope of the variable &apos;firstCall&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="C:/Users/EliR/OneDrive/Documents/PlatformIO/Projects/canbus/.pio/libdeps/megaatmega2560/Adafruit_GFX_Library/fontconvert/fontconvert.c">
            <location file="C:\Users\EliR\OneDrive\Documents\PlatformIO\Projects\canbus\.pio\libdeps\megaatmega2560\Adafruit_GFX_Library\fontconvert\fontconvert.c" line="34" column="48"/>
            <symbol>firstCall</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="C:/Users/EliR/OneDrive/Documents/PlatformIO/Projects/canbus/.pio/libdeps/megaatmega2560/Adafruit_GFX_Library/fontconvert/fontconvert.c:33:6" call-funcname="enbit" call-argnr="1" file="C:/Users/EliR/OneDrive/Documents/PlatformIO/Projects/canbus/.pio/libdeps/megaatmega2560/Adafruit_GFX_Library/fontconvert/fontconvert.c" line="200" col="14" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="enbit" lineNumber="33"/>
    <functiondecl functionName="main" lineNumber="53"/>
    <functioncall functionName="FT_Done_FreeType"/>
    <functioncall functionName="FT_Done_Glyph"/>
    <functioncall functionName="FT_Get_Glyph"/>
    <functioncall functionName="FT_Init_FreeType"/>
    <functioncall functionName="FT_LOAD_TARGET_MONO"/>
    <functioncall functionName="FT_Load_Char"/>
    <functioncall functionName="FT_New_Face"/>
    <functioncall functionName="FT_Property_Set"/>
    <functioncall functionName="FT_RENDER_MODE_MONO"/>
    <functioncall functionName="FT_Render_Glyph"/>
    <functioncall functionName="FT_Set_Char_Size"/>
    <functioncall functionName="TT_INTERPRETER_VERSION_35"/>
    <functioncall functionName="atoi"/>
    <functioncall functionName="bitmap"/>
    <functioncall functionName="bitmapOffset"/>
    <functioncall functionName="byte"/>
    <functioncall functionName="c"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="enbit"/>
    <functioncall functionName="err"/>
    <functioncall functionName="face"/>
    <functioncall functionName="first"/>
    <functioncall functionName="firstCall"/>
    <functioncall functionName="fontName"/>
    <functioncall functionName="for"/>
    <functioncall functionName="fprintf"/>
    <functioncall functionName="glyph"/>
    <functioncall functionName="height"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="interpreter_version"/>
    <functioncall functionName="ispunct"/>
    <functioncall functionName="isspace"/>
    <functioncall functionName="j"/>
    <functioncall functionName="last"/>
    <functioncall functionName="left"/>
    <functioncall functionName="library"/>
    <functioncall functionName="malloc"/>
    <functioncall functionName="n"/>
    <functioncall functionName="printf"/>
    <functioncall functionName="ptr"/>
    <functioncall functionName="putchar"/>
    <functioncall functionName="rows"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="sprintf"/>
    <functioncall functionName="stderr"/>
    <functioncall functionName="strcpy"/>
    <functioncall functionName="strlen"/>
    <functioncall functionName="strrchr"/>
    <functioncall functionName="sum"/>
    <functioncall functionName="top"/>
    <functioncall functionName="value"/>
    <functioncall functionName="while"/>
    <functioncall functionName="width"/>
    <functioncall functionName="xAdvance"/>
    <functioncall functionName="xOffset"/>
    <functioncall functionName="yOffset"/>
  </FileInfo>
</analyzerinfo>
