determineReturnCodeByPacketStatus call:[getStatus]
MCP2515
MCP2515 call:[empty,pop] noreturn:[pop]
begin call:[begin,case,getCnfForClockFrequency16e6,getCnfForClockFrequency8e6,pinMode,readRegister,reset,writeRegister]
end call:[end,reset] noreturn:[end]
getStatus call:[readRegister] noreturn:[readRegister]
getErrorFlags call:[readRegister] noreturn:[readRegister]
setPins
setSPIFrequency call:[SPISettings] noreturn:[SPISettings]
setClockFrequency
setMask call:[readRegister,writeRegister]
setFilter call:[readRegister,writeRegister]
getMode call:[readRegister]
setConfigMode call:[readRegister,writeRegister]
setListenMode call:[modifyRegister,readRegister,writeRegister] noreturn:[modifyRegister,readRegister]
setLoopbackMode call:[modifyRegister,readRegister,writeRegister] noreturn:[modifyRegister]
setSleepMode call:[modifyRegister,readRegister,writeRegister,yield] noreturn:[modifyRegister,yield]
setNormalMode call:[modifyRegister,readRegister,writeRegister] noreturn:[modifyRegister]
setWakeupFilter call:[modifyRegister,readRegister]
setOneShotMode call:[modifyRegister,readRegister]
receivePacket call:[beginTransaction,digitalWrite,end,endTransaction,modifyRegister,readRegister,transfer,writeData] noreturn:[endTransaction,modifyRegister,writeData]
onReceivePacket global:[GLOBAL_MCP] call:[attachInterrupt,detachInterrupt,digitalPinToInterrupt,modifyRegister,pinMode,usingInterrupt] noreturn:[detachInterrupt,modifyRegister]
getTxQueueLength call:[size] noreturn:[size]
processTxQueue call:[empty,front,handleMessageTransmit,pop,readRegister,writePacket] noreturn:[pop,writePacket]
writePacket call:[beginTransaction,digitalWrite,endTransaction,getTxQueueLength,handleMessageTransmit,interrupts,modifyRegister,noInterrupts,push,readRegister,transfer,writeRegister] noreturn:[endTransaction,handleMessageTransmit,transfer,writeRegister]
abortPacket call:[empty,front,handleMessageTransmit,modifyRegister,return] noreturn:[modifyRegister,return]
waitForPacketStatus call:[delayMicroseconds,handleMessageTransmit,millis,return,while] noreturn:[delayMicroseconds,return]
handleMessageTransmit call:[delayMicroseconds,determineReturnCodeByPacketStatus,modifyRegister,readRegister,while,yield] noreturn:[delayMicroseconds,determineReturnCodeByPacketStatus,modifyRegister]
getCnfForClockFrequency8e6 call:[case]
getCnfForClockFrequency16e6 call:[case]
onInterrupt global:[GLOBAL_MCP] call:[_handleInterruptPacket] noreturn:[_handleInterruptPacket]
_handleInterruptPacket call:[CANPacket,_onReceivePacket,empty,front,modifyRegister,pop,processTxQueue,readRegister,receivePacket] noreturn:[_onReceivePacket,processTxQueue]
reset call:[beginTransaction,delayMicroseconds,digitalWrite,endTransaction,transfer] noreturn:[delayMicroseconds]
readRegister call:[beginTransaction,digitalWrite,endTransaction,transfer]
modifyRegister call:[beginTransaction,digitalWrite,endTransaction,transfer] noreturn:[endTransaction]
writeRegister call:[beginTransaction,digitalWrite,endTransaction,transfer] noreturn:[endTransaction]
