exception
bad_exception
operatornew
operatordelete
operatornew[]
operatordelete[]
div call:[ldiv] noreturn:[ldiv]
advance
distance
operator< call:[base] noreturn:[base]
operator!= call:[base] noreturn:[base]
operator> call:[base] noreturn:[base]
operator>= call:[base] noreturn:[base]
operator<= call:[base] noreturn:[base]
operator- call:[base] noreturn:[base]
operator+ call:[base]
back_insert_iterator
operator= call:[push_back]
operator*
operator++
operator++
back_inserter
front_insert_iterator
operator= call:[push_front]
operator*
operator++
operator++
front_inserter
insert_iterator
operator= call:[insert]
operator*
operator++
operator++
inserter call:[iterator]
operator!=
operator> call:[return] noreturn:[return]
operator<=
operator>=
pair
pair
pair
operator== call:[return] noreturn:[return]
operator<
operator!=
operator>
operator>=
operator<=
make_pair
move
address
address
allocator < void >
allocator < void >
allocate call:[operatornew,return,sizeof]
deallocate call:[operatordelete] noreturn:[operatordelete]
construct call:[T,new] noreturn:[T]
destroy call:[T] noreturn:[T]
raw_storage_iterator
operator*
operator= call:[T,new]
operator++
operator++
get_temporary_buffer call:[malloc,sizeof]
return_temporary_buffer call:[free] noreturn:[free]
auto_ptr
auto_ptr
auto_ptr
auto_ptr
operator= call:[release]
operator= call:[release]
auto_ptr
operator*
operator.
get
release
reset
assign
to_int_type call:[return]
eq_int_type
lt call:[strncmp]
move call:[memmove,return] noreturn:[memmove]
copy call:[assign] noreturn:[assign]
assign call:[memset,return] noreturn:[memset]
compare call:[strncmp] noreturn:[strncmp]
length call:[strlen] noreturn:[strlen]
eos
eof
not_eof
get_state
istream_iterator
istream_iterator
istream_iterator
istream_iterator
operator*
operator.
operator++
operator++ call:[return] noreturn:[return]
m_equal call:[return] noreturn:[return]
operator== call:[m_equal] noreturn:[m_equal]
operator!=
ostream_iterator
ostream_iterator
ostream_iterator
ostream_iterator
operator= call:[return] noreturn:[return]
operator*
operator++
operator++
proxy
operator*
istreambuf_iterator
istreambuf_iterator
istreambuf_iterator
istreambuf_iterator
operator* call:[sgetc] noreturn:[sgetc]
operator++ call:[sbumpc]
operator++ call:[return,sbumpc] noreturn:[return]
equal call:[is_eof] noreturn:[is_eof]
is_eof call:[eof,sgetc] noreturn:[eof]
operator== call:[equal] noreturn:[equal]
operator!= call:[equal] noreturn:[equal]
ostreambuf_iterator
ostreambuf_iterator
operator= call:[eof,failed,sputc]
operator*
operator++
operator++
failed
begin call:[begin] noreturn:[begin]
end call:[end] noreturn:[end]
operator()
operator()
operator()
operator()
operator()
operator()
operator() call:[return] noreturn:[return]
operator() call:[return] noreturn:[return]
operator() call:[return] noreturn:[return]
operator() call:[return] noreturn:[return]
operator() call:[return] noreturn:[return]
operator() call:[return] noreturn:[return]
operator() call:[return] noreturn:[return]
operator() call:[return] noreturn:[return]
operator()
unary_negate
operator() call:[p] noreturn:[p]
not1
binary_negate
operator() call:[p] noreturn:[p]
not2
binder1st
operator() call:[op] noreturn:[op]
bind1st call:[first_argument_type]
binder2nd
operator() call:[op] noreturn:[op]
bind2nd call:[second_argument_type]
pointer_to_unary_function
operator() call:[func] noreturn:[func]
ptr_fun
pointer_to_binary_function
operator() call:[func] noreturn:[func]
ptr_fun
mem_fun_t
operator() call:[return]
mem_fun1_t
operator() call:[return]
const_mem_fun_t
operator() call:[return]
const_mem_fun1_t
operator() call:[return]
mem_fun
mem_fun
mem_fun
mem_fun
mem_fun_ref_t
operator() call:[return]
mem_fun1_ref_t
operator() call:[return]
mem_fun_ref
mem_fun1_ref
unary_compose
operator() call:[mf1,mf2] noreturn:[mf1]
compose1
binary_compose
operator() call:[mf1,mf2,mf3] noreturn:[mf1]
compose2
for_each call:[f]
find
find_if call:[pred]
find_end call:[temp1,temp2]
find_end call:[pred,temp1,temp2]
find_first_of call:[temp2]
find_first_of call:[temp2]
adjacent_find
adjacent_find call:[pred]
count
count_if call:[pred]
mismatch
mismatch call:[pred]
equal
equal call:[pred]
search call:[search] noreturn:[search]
search call:[pred,temp1,temp2]
search_n call:[temp]
search_n call:[pred,temp]
copy
copy_n
copy_backward
swap call:[temp]
iter_swap call:[temp]
swap_ranges call:[iter_swap]
transform call:[op]
transform call:[binary_op]
replace
replace_if call:[pred]
replace_copy
replace_copy_if call:[pred]
fill
fill_n
generate call:[gen]
generate_n call:[gen]
remove call:[temp]
remove_if call:[pred,temp]
remove_copy
remove_copy_if call:[pred]
unique call:[new_val,old_val]
unique call:[new_val,old_val,pred]
unique_copy call:[temp]
unique_copy call:[pred,temp]
reverse call:[iter_swap]
reverse_copy
rotate call:[swap,while]
rotate_copy call:[temp]
random_shuffle call:[iter_swap,rand]
random_shuffle call:[iter_swap,rand]
partition call:[stable_partition] noreturn:[stable_partition]
stable_partition call:[iter_swap,pred]
sort call:[sort] noreturn:[sort]
stable_sort call:[stable_sort] noreturn:[stable_sort]
stable_sort call:[comp,iter_swap] noreturn:[iter_swap]
sort call:[stable_sort] noreturn:[stable_sort]
partial_sort call:[partial_sort] noreturn:[partial_sort]
partial_sort call:[comp,iter_swap] noreturn:[iter_swap]
partial_sort_copy call:[partial_sort_copy] noreturn:[partial_sort_copy]
partial_sort_copy call:[comp,sort] noreturn:[sort]
nth_element call:[nth_element] noreturn:[nth_element]
nth_element call:[partial_sort] noreturn:[partial_sort]
lower_bound call:[lower_bound] noreturn:[lower_bound]
lower_bound call:[advance,comp,distance]
upper_bound call:[upper_bound] noreturn:[upper_bound]
upper_bound call:[advance,comp,distance]
equal_range call:[equal_range] noreturn:[equal_range]
equal_range call:[lower_bound,upper_bound]
binary_search call:[binary_search] noreturn:[binary_search]
binary_search call:[advance,comp,distance]
merge call:[merge] noreturn:[merge]
merge call:[comp]
inplace_merge call:[inplace_merge] noreturn:[inplace_merge]
inplace_merge call:[comp,iter_swap,temp]
includes call:[includes] noreturn:[includes]
includes call:[comp]
set_union call:[set_union] noreturn:[set_union]
set_union call:[comp]
set_intersection call:[set_intersection] noreturn:[set_intersection]
set_intersection call:[comp]
set_difference call:[set_difference] noreturn:[set_difference]
set_difference call:[comp]
set_symmetric_difference call:[set_symmetric_difference] noreturn:[set_symmetric_difference]
set_symmetric_difference call:[comp]
push_heap call:[push_heap] noreturn:[push_heap]
push_heap call:[comp,iter_swap]
pop_heap call:[pop_heap] noreturn:[pop_heap]
pop_heap call:[iter_swap]
make_heap call:[make_heap] noreturn:[make_heap]
make_heap call:[sort] noreturn:[sort]
sort_heap call:[sort_heap] noreturn:[sort_heap]
sort_heap call:[sort] noreturn:[sort]
min
min call:[comp]
max
max call:[comp]
min_element call:[min_element] noreturn:[min_element]
min_element call:[comp]
max_element call:[max_element] noreturn:[max_element]
max_element call:[comp]
lexicographical_compare call:[lexicographical_compare] noreturn:[lexicographical_compare]
lexicographical_compare call:[comp]
next_permutation call:[next_permutation] noreturn:[next_permutation]
next_permutation call:[comp,iter_swap,reverse]
prev_permutation call:[prev_permutation] noreturn:[prev_permutation]
prev_permutation call:[comp,iter_swap,reverse]
operator== call:[size]
operator< call:[begin,end,lexicographical_compare] noreturn:[lexicographical_compare]
operator!=
operator> call:[begin,end,lexicographical_compare] noreturn:[lexicographical_compare]
operator>= call:[begin,end,lexicographical_compare] noreturn:[lexicographical_compare]
operator<= call:[begin,end,lexicographical_compare] noreturn:[lexicographical_compare]
swap call:[swap] noreturn:[swap]
operator+ call:[append,temp]
operator+ call:[append,temp]
operator+ call:[append,temp]
operator+ call:[append,temp]
operator+ call:[temp]
operator== call:[compare]
operator== call:[compare]
operator== call:[compare]
operator!= call:[compare]
operator!= call:[return,temp] noreturn:[return]
operator!= call:[return,temp] noreturn:[return]
operator< call:[compare]
operator< call:[compare,temp]
operator< call:[compare,temp]
operator> call:[compare]
operator> call:[compare,temp]
operator> call:[compare,temp]
operator<= call:[compare]
operator<= call:[compare,temp]
operator<= call:[compare,temp]
operator>= call:[compare]
operator>= call:[compare,temp]
operator>= call:[compare,temp]
swap call:[swap] noreturn:[swap]
locale
locale
locale
locale
operator=
name
facet
facet
id
flags
unsetf
precision
width
getloc
ios_base
sync_with_stdio
ios_base
boolalpha call:[setf]
noboolalpha call:[unsetf]
showbase call:[setf]
noshowbase call:[unsetf]
showpoint call:[setf]
noshowpoint call:[unsetf]
showpos call:[setf]
noshowpos call:[unsetf]
skipws call:[setf]
noskipws call:[unsetf]
uppercase call:[setf]
nouppercase call:[unsetf]
unitbuf call:[setf]
nounitbuf call:[unsetf]
internal call:[setf]
left call:[setf]
right call:[setf]
dec call:[setf]
hex call:[setf]
oct call:[setf]
fixed call:[setf]
scientific call:[setf]
fpos
state
state
operator==
operator!=
operator+
operator-
operator-
operatorvoid* call:[fail,return]
operator! call:[fail] noreturn:[fail]
rdstate
clear call:[rdbuf]
setstate call:[clear,rdstate] noreturn:[clear]
good call:[rdstate,return] noreturn:[return]
eof call:[rdstate]
fail
bad
exceptions
exceptions
basic_ios < char , char_traits < char > > call:[init] noreturn:[init]
basic_ios < char , char_traits < char > >
basic_ios < char , char_traits < char > >
tie
tie
rdbuf
rdbuf
fill
fill
imbue call:[imbue] noreturn:[imbue]
basic_ios < char , char_traits < char > >
operator=
init
widen
basic_string < char , char_traits < char > , A >
basic_string < char , char_traits < char > , A > call:[__throw_out_of_range,copy,resize] noreturn:[__throw_out_of_range,copy]
basic_string < char , char_traits < char > , A >
basic_string < char , char_traits < char > , A >
basic_string < char , char_traits < char > , A >
operator= call:[clear,copy,length,resize] noreturn:[copy]
operator= call:[clear,push_back]
length call:[size] noreturn:[size]
resize call:[resize] noreturn:[resize]
operator+= call:[append] noreturn:[append]
operator+= call:[append] noreturn:[append]
operator+= call:[push_back]
append call:[copy,resize]
append call:[__throw_length_error,__throw_out_of_range,copy,resize,size] noreturn:[__throw_length_error,__throw_out_of_range]
append call:[copy,resize]
append call:[copy,length,resize]
append call:[resize]
assign call:[operator=]
assign call:[__throw_out_of_range,copy,resize] noreturn:[__throw_out_of_range]
assign call:[copy,resize]
assign call:[assign,length] noreturn:[assign]
assign call:[clear,resize]
assign call:[append,char,resize]
insert call:[__throw_length_error,__throw_out_of_range,copy,move,resize] noreturn:[__throw_length_error,__throw_out_of_range]
insert call:[__throw_length_error,__throw_out_of_range,copy,move,resize] noreturn:[__throw_length_error,__throw_out_of_range]
insert call:[insert,length] noreturn:[insert]
insert call:[__throw_length_error,__throw_out_of_range,assign,move,resize] noreturn:[__throw_length_error,__throw_out_of_range]
erase call:[move,resize]
erase call:[end,pop_back]
erase call:[end,resize]
replace call:[__throw_length_error,__throw_out_of_range,copy,move,resize] noreturn:[__throw_length_error,__throw_out_of_range,resize]
replace call:[basic_string < char , char_traits < char > , A >,replace] noreturn:[replace]
replace call:[basic_string < char , char_traits < char > , A >,replace] noreturn:[replace]
replace call:[basic_string < char , char_traits < char > , A >,replace] noreturn:[replace]
copy call:[__throw_out_of_range,copy] noreturn:[__throw_out_of_range]
swap call:[swap] noreturn:[swap]
c_str call:[reserve]
data
get_allocator
find call:[basic_string < char , char_traits < char > , A >,find] noreturn:[find]
find call:[basic_string < char , char_traits < char > , A >,find] noreturn:[find]
find call:[length,operator[]]
rfind call:[length,substr] noreturn:[length]
rfind call:[basic_string < char , char_traits < char > , A >,rfind] noreturn:[rfind]
rfind call:[basic_string < char , char_traits < char > , A >,rfind] noreturn:[rfind]
rfind call:[basic_string < char , char_traits < char > , A >,rfind] noreturn:[rfind]
find_first_of call:[eq,length,operator[]]
find_first_of call:[basic_string < char , char_traits < char > , A >,find_first_of] noreturn:[find_first_of]
find_first_of call:[basic_string < char , char_traits < char > , A >,find_first_of] noreturn:[find_first_of]
find_first_of call:[eq,length,operator[]]
find_last_of call:[eq,length,operator[]] noreturn:[length]
find_last_of call:[basic_string < char , char_traits < char > , A >,find_last_of] noreturn:[find_last_of]
find_last_of call:[basic_string < char , char_traits < char > , A >,find_last_of] noreturn:[find_last_of]
find_last_of call:[eq,length,operator[]] noreturn:[length]
find_first_not_of call:[eq,length,operator[]]
find_first_not_of call:[basic_string < char , char_traits < char > , A >,find_first_not_of] noreturn:[find_first_not_of]
find_first_not_of call:[basic_string < char , char_traits < char > , A >,find_first_not_of] noreturn:[find_first_not_of]
find_first_not_of call:[length,operator[]]
find_last_not_of call:[at,find_first_of,length,xpos]
find_last_not_of call:[basic_string < char , char_traits < char > , A >,find_last_not_of] noreturn:[find_last_not_of]
find_last_not_of call:[basic_string < char , char_traits < char > , A >,find_last_not_of] noreturn:[find_last_not_of]
find_last_not_of call:[at,eq,length,xpos]
compare call:[compare]
compare call:[compare]
compare call:[compare,length]
compare call:[compare,length]
basic_string < char , char_traits < char > , A > call:[append,length] noreturn:[append]
operator= call:[clear,copy,resize]
vector < char , A > call:[allocate] noreturn:[allocate]
vector < char , A > call:[allocate,resize] noreturn:[resize]
vector < char , A > call:[allocate,assign] noreturn:[assign]
vector < char , A > call:[allocate,construct] noreturn:[construct]
vector < char , A > call:[allocate,begin,construct,size] noreturn:[construct]
operator= call:[construct,downsize,reserve] noreturn:[downsize]
assign call:[begin,clear,insert] noreturn:[insert]
assign call:[clear,resize] noreturn:[resize]
assign call:[begin,clear,end,insert] noreturn:[insert]
get_allocator
begin
begin
end call:[return] noreturn:[return]
end call:[return] noreturn:[return]
rbegin call:[end,reverse_iterator < char * >] noreturn:[reverse_iterator < char * >]
rbegin call:[end,reverse_iterator < const char * >] noreturn:[reverse_iterator < const char * >]
rend call:[begin,reverse_iterator < char * >] noreturn:[reverse_iterator < char * >]
rend call:[begin,reverse_iterator < const char * >] noreturn:[reverse_iterator < const char * >]
size
max_size call:[return,sizeof] noreturn:[sizeof]
capacity
empty call:[return,size] noreturn:[return]
data
data
operator[]
operator[]
at call:[__throw_out_of_range] noreturn:[__throw_out_of_range]
at call:[__throw_out_of_range] noreturn:[__throw_out_of_range]
front
front
back call:[size]
back call:[size]
push_back call:[resize,size] noreturn:[resize]
pop_back call:[downsize,size] noreturn:[downsize]
insert call:[resize,return,size] noreturn:[return]
_insert_fill call:[resize,size]
_insert_from_iterator call:[insert]
_dispatch_insert call:[_insert_fill] noreturn:[_insert_fill]
_dispatch_insert call:[_insert_from_iterator] noreturn:[_insert_from_iterator]
insert call:[_insert_fill] noreturn:[_insert_fill]
insert call:[_dispatch_insert,value] noreturn:[_dispatch_insert]
erase call:[downsize,return,size] noreturn:[return]
erase call:[downsize,return,size] noreturn:[return]
swap
clear call:[downsize] noreturn:[downsize]
vector < char , A > call:[deallocate,destroy] noreturn:[deallocate,destroy]
getloc
pubsetbuf call:[setbuf] noreturn:[setbuf]
pubseekoff call:[seekoff] noreturn:[seekoff]
pubseekpos call:[seekpos] noreturn:[seekpos]
pubsync call:[sync] noreturn:[sync]
sgetn call:[xsgetn] noreturn:[xsgetn]
sputn call:[seekoff,xsputn] noreturn:[seekoff,xsputn]
basic_streambuf < char , char_traits < char > >
operator=
eback
gptr
egptr
gbump
setg
pbase
pptr
epptr
pbump
setp
imbue
setbuf
seekoff
seekpos
sync
showmanyc
xsgetn
underflow call:[eof] noreturn:[eof]
uflow call:[eof,eq_int_type,gbump,underflow] noreturn:[gbump]
pbackfail
xsputn call:[eof,sputc]
overflow
basic_streambuf < char , char_traits < char > >
pubimbue
in_avail call:[showmanyc] noreturn:[showmanyc]
sbumpc call:[gbump,gptr,to_int_type,uflow] noreturn:[uflow]
snextc call:[eof,sbumpc,sgetc] noreturn:[eof,sgetc]
sgetc call:[gptr,to_int_type,underflow] noreturn:[to_int_type,underflow]
sungetc call:[gbump,gptr,to_int_type] noreturn:[to_int_type]
basic_streambuf < char , char_traits < char > >
initializer_list < char >
initializer_list < char >
size
begin
end
reverse_iterator < char * >
reverse_iterator < char * >
reverse_iterator < char * >
base
operator*
operator. call:[operator*]
operator[]
operator++
operator++
operator--
operator--
operator+ call:[retval]
operator+=
operator- call:[retval]
operator-=
reverse_iterator < const char * >
reverse_iterator < const char * >
reverse_iterator < const char * >
base
operator*
operator. call:[operator*]
operator[]
operator++
operator++
operator--
operator--
operator+ call:[retval]
operator+=
operator- call:[retval]
operator-=
operator== < char * > call:[base] noreturn:[base]
operator== < const char * > call:[base] noreturn:[base]
