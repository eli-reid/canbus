mcp2515_reset call:[SPISettings,beginTransaction,delay,digitalWrite,endTransaction,transfer] noreturn:[delay]
mcp2515_readRegister call:[SPISettings,beginTransaction,digitalWrite,endTransaction,transfer]
mcp2515_readRegisterS call:[SPISettings,beginTransaction,digitalWrite,endTransaction,transfer] noreturn:[endTransaction,transfer]
mcp2515_setRegister call:[SPISettings,beginTransaction,digitalWrite,endTransaction,transfer] noreturn:[endTransaction]
mcp2515_setRegisterS call:[SPISettings,beginTransaction,digitalWrite,endTransaction,transfer] noreturn:[endTransaction,transfer]
mcp2515_modifyRegister call:[SPISettings,beginTransaction,digitalWrite,endTransaction,transfer] noreturn:[endTransaction]
mcp2515_readStatus call:[SPISettings,beginTransaction,digitalWrite,endTransaction,transfer]
mcp2515_setCANCTRL_Mode call:[mcp2515_modifyRegister,mcp2515_readRegister,return] noreturn:[return]
mcp2515_configRate call:[case,mcp2515_setRegister,return] noreturn:[return]
mcp2515_initCANBuffers call:[mcp2515_setRegister] noreturn:[mcp2515_setRegister]
mcp2515_init call:[delay,mcp2515_configRate,mcp2515_initCANBuffers,mcp2515_modifyRegister,mcp2515_reset,mcp2515_setCANCTRL_Mode,mcp2515_setRegister] noreturn:[delay]
mcp2515_write_id call:[mcp2515_setRegisterS] noreturn:[mcp2515_setRegisterS]
mcp2515_read_id call:[mcp2515_readRegisterS]
mcp2515_write_canMsg call:[mcp2515_setRegister,mcp2515_setRegisterS,mcp2515_write_id] noreturn:[mcp2515_write_id]
mcp2515_read_canMsg call:[mcp2515_readRegister,mcp2515_readRegisterS,mcp2515_read_id] noreturn:[mcp2515_readRegisterS]
mcp2515_start_transmit call:[mcp2515_modifyRegister] noreturn:[mcp2515_modifyRegister]
mcp2515_getNextFreeTXBuf call:[mcp2515_readRegister]
MCP_CAN
begin call:[begin,digitalWrite,mcp2515_init,pinMode,return] noreturn:[return]
init_Mask call:[delay,mcp2515_setCANCTRL_Mode,mcp2515_write_id] noreturn:[mcp2515_write_id]
init_Filt call:[delay,mcp2515_setCANCTRL_Mode,mcp2515_write_id]
setMsg call:[min,return] noreturn:[return]
setMsg call:[setMsg] noreturn:[setMsg]
clearMsg call:[return] noreturn:[return]
sendMsg call:[mcp2515_getNextFreeTXBuf,mcp2515_readRegister,mcp2515_start_transmit,mcp2515_write_canMsg,return,while] noreturn:[return]
sendMsgBuf call:[sendMsg,setMsg] noreturn:[sendMsg]
sendMsgBuf call:[sendMsg,setMsg] noreturn:[sendMsg]
readMsg call:[mcp2515_modifyRegister,mcp2515_readStatus,mcp2515_read_canMsg]
readMsgBuf call:[readMsg]
readMsgBufID call:[readMsg]
checkReceive call:[mcp2515_readStatus,return] noreturn:[return]
checkError call:[mcp2515_readRegister,return] noreturn:[return]
getCanId
isRemoteRequest
isExtendedFrame
